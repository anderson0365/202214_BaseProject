{
	"info": {
		"_postman_id": "2d2ca1fe-0822-40f0-94ac-5811036dd5b5",
		"name": "Stores",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20335469"
	},
	"item": [
		{
			"name": "Add a store",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()",
							"pm.collectionVariables.set(\"store_id\", data.id);",
							"pm.test(\"Status code is 201\", function () {",
							"   pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Omega\",\n    \"city\": \"BOG\",\n    \"address\": \"Calle 50c #22-38\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/stores",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"stores"
					]
				}
			},
			"response": [
				{
					"name": "Add a store",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Omega\",\n    \"city\": \"BOG\",\n    \"address\": \"Calle 50c #22-38\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/stores",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stores"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "102"
						},
						{
							"key": "ETag",
							"value": "W/\"66-p5bI93fdoPvmHkFr4f4AtnKp6z8\""
						},
						{
							"key": "Date",
							"value": "Sat, 17 Sep 2022 23:42:32 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"name\": \"Omega\",\n    \"city\": \"BOG\",\n    \"address\": \"Calle 50c #22-38\",\n    \"id\": \"4d7c0d89-8b12-4f85-81a1-083c86577484\"\n}"
				}
			]
		},
		{
			"name": "Add an invalid store",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()",
							"pm.collectionVariables.set(\"museum_id\", data.id);",
							"pm.test(\"Status code is 400\", function () {",
							"   pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Omega\",\n    \"city\": \"BOGG\",\n    \"address\": \"Calle 50c #22-38\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/stores",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"stores"
					]
				}
			},
			"response": [
				{
					"name": "Add an invalid store",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Omega\",\n    \"city\": \"BOGG\",\n    \"address\": \"Calle 50c #22-38\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/stores",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stores"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "100"
						},
						{
							"key": "ETag",
							"value": "W/\"64-HM9Z6BXrMB6aqPe4+3CERGztWgA\""
						},
						{
							"key": "Date",
							"value": "Sat, 17 Sep 2022 23:42:41 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"statusCode\": 400,\n    \"message\": [\n        \"city must match ^[A-Z]{3}$ regular expression\"\n    ],\n    \"error\": \"Bad Request\"\n}"
				}
			]
		},
		{
			"name": "Get all stores",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Number of museums > ' + 0, function () {",
							"   var data = pm.response.json()",
							"   pm.expect(data.length).to.greaterThan(0)",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/stores",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"stores"
					]
				}
			},
			"response": [
				{
					"name": "Get all stores",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/stores",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stores"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "118"
						},
						{
							"key": "ETag",
							"value": "W/\"76-WR+ZbPSn5TxsSFz813MjxHHZdEg\""
						},
						{
							"key": "Date",
							"value": "Sat, 17 Sep 2022 23:42:51 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "[\n    {\n        \"id\": \"4d7c0d89-8b12-4f85-81a1-083c86577484\",\n        \"name\": \"Omega\",\n        \"city\": \"BOG\",\n        \"address\": \"Calle 50c #22-38\",\n        \"products\": []\n    }\n]"
				}
			]
		},
		{
			"name": "Get one store",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/stores/{{store_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"stores",
						"{{store_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Get one store",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/stores/{{store_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stores",
								"{{store_id}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "116"
						},
						{
							"key": "ETag",
							"value": "W/\"74-fEgg1xJM5uPor0+64pO0puSAYEA\""
						},
						{
							"key": "Date",
							"value": "Sat, 17 Sep 2022 23:43:03 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": \"4d7c0d89-8b12-4f85-81a1-083c86577484\",\n    \"name\": \"Omega\",\n    \"city\": \"BOG\",\n    \"address\": \"Calle 50c #22-38\",\n    \"products\": []\n}"
				}
			]
		},
		{
			"name": "Get an invalid store",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"The store with the given id was not found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/stores/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"stores",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"name": "Get an invalid store",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/stores/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stores",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "72"
						},
						{
							"key": "ETag",
							"value": "W/\"48-LSYh1QNtMBw2KSVOn5NwCFb2JCg\""
						},
						{
							"key": "Date",
							"value": "Sat, 17 Sep 2022 23:43:10 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The store with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Update a store",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Omega\",\n    \"city\": \"MED\",\n    \"address\": \"Calle 44c #22-38\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/stores/{{store_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"stores",
						"{{store_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Update a store",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Omega\",\n    \"city\": \"MED\",\n    \"address\": \"Calle 44c #22-38\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/stores/{{store_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stores",
								"{{store_id}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "102"
						},
						{
							"key": "ETag",
							"value": "W/\"66-aRQMn0O3EohxQRbDBIy6RKJhvWc\""
						},
						{
							"key": "Date",
							"value": "Sat, 17 Sep 2022 23:43:17 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"name\": \"Omega\",\n    \"city\": \"MED\",\n    \"address\": \"Calle 44c #22-38\",\n    \"id\": \"4d7c0d89-8b12-4f85-81a1-083c86577484\"\n}"
				}
			]
		},
		{
			"name": "Update an invalid store",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"The store with the given id was not found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Omega\",\n    \"city\": \"MED\",\n    \"address\": \"Calle 44c #22-38\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/stores/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"stores",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"name": "Update an invalid store",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Omega\",\n    \"city\": \"MED\",\n    \"address\": \"Calle 44c #22-38\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/stores/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stores",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "72"
						},
						{
							"key": "ETag",
							"value": "W/\"48-LSYh1QNtMBw2KSVOn5NwCFb2JCg\""
						},
						{
							"key": "Date",
							"value": "Sat, 17 Sep 2022 23:43:23 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The store with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Delete a store",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"   pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/stores/{{store_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"stores",
						"{{store_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Delete a store",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/stores/{{store_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stores",
								"{{store_id}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "plain",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Date",
							"value": "Sat, 17 Sep 2022 23:43:29 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Delete an invalid store",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"The store with the given id was not found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/stores/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"stores",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"name": "Delete an invalid store",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/stores/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stores",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "72"
						},
						{
							"key": "ETag",
							"value": "W/\"48-LSYh1QNtMBw2KSVOn5NwCFb2JCg\""
						},
						{
							"key": "Date",
							"value": "Sat, 17 Sep 2022 23:43:38 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The store with the given id was not found\"\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000/api/v1",
			"type": "string"
		},
		{
			"key": "museum_id",
			"value": ""
		},
		{
			"key": "store_id",
			"value": ""
		}
	]
}